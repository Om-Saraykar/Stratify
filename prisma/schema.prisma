generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Task {
  id       String  @id @default(cuid())
  title    String
  status   String
  label    String
  priority String
}

model JournalEntry {
  id          String          @id @default(cuid())
  title       String
  description String
  date        DateTime
  image       String?
  stressScore Float?  
  checklist   ChecklistItem[]
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
}

model ChecklistItem {
  id      String         @id @default(cuid())
  text    String
  checked Boolean        @default(false)
  entryId String
  entry   JournalEntry   @relation(fields: [entryId], references: [id], onDelete: Cascade)
}
